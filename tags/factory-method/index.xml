<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Factory Method on L</title>
    <link>http://ljosef.github.io/tags/factory-method/</link>
    <description>Recent content in Factory Method on L</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright@yulianglu2010@gmail.com</copyright>
    <lastBuildDate>Sun, 16 Dec 2018 21:28:46 +0800</lastBuildDate>
    
	<atom:link href="http://ljosef.github.io/tags/factory-method/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>23 Design Patterns in Practice</title>
      <link>http://ljosef.github.io/23-design-patterns-in-practice/</link>
      <pubDate>Sun, 16 Dec 2018 21:28:46 +0800</pubDate>
      
      <guid>http://ljosef.github.io/23-design-patterns-in-practice/</guid>
      <description>By Yuliang, lu
Singleton Definition Ensure a class has only one instance and provide a global point of access to it.
Code public class Singleton{ private static final Singleton singleton = new Singleton(); private Singleton(){ }; public static Singleton getInstance(){ return singleton; } }  Scenarios  unique sequence number counter IO querying or db access  E.g. Beans in Spring
Factory Method Definition Define an interface for creating an object, but let subclasses decide which class to initiate.</description>
    </item>
    
  </channel>
</rss>