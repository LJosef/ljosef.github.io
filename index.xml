<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>get_calm_down_watching_the_lighting_stars_in_the_night</title>
    <link>http://ljosef.github.io/</link>
    <description>Recent content on get_calm_down_watching_the_lighting_stars_in_the_night</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright@yulianglu2010@gmail.com</copyright>
    <lastBuildDate>Wed, 01 Aug 2018 00:39:00 +0800</lastBuildDate>
    
	<atom:link href="http://ljosef.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Contact</title>
      <link>http://ljosef.github.io/contact/</link>
      <pubDate>Wed, 01 Aug 2018 00:39:00 +0800</pubDate>
      
      <guid>http://ljosef.github.io/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ljosef.github.io/about/</link>
      <pubDate>Wed, 01 Aug 2018 00:38:00 +0800</pubDate>
      
      <guid>http://ljosef.github.io/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kubernetes Best Practices Terminating With Grace</title>
      <link>http://ljosef.github.io/kubernetes-best-practices-terminating-with-grace/</link>
      <pubDate>Tue, 31 Jul 2018 00:18:36 +0800</pubDate>
      
      <guid>http://ljosef.github.io/kubernetes-best-practices-terminating-with-grace/</guid>
      <description>owner: Sandeep Dinesh, Developer Advocate
When it comes to distributed systems, handling failure is key. Kubernetes helps with this by utilizing controllers that can watch the state of your system and restart services that have stopped performing. On the other hand, Kubernetes can often forcibly terminate your application as part of the normal operation of the system.
In this episode of “Kubernetes Best Practices,” let’s take a look at how you can help Kubernetes do its job more efficiently and reduce the downtime your applications experience.</description>
    </item>
    
    <item>
      <title>Kubernetes Best Practices How and Why to Build Small Container Images</title>
      <link>http://ljosef.github.io/kubernetes-best-practices-how-and-why-to-build-small-container-images/</link>
      <pubDate>Tue, 31 Jul 2018 00:08:53 +0800</pubDate>
      
      <guid>http://ljosef.github.io/kubernetes-best-practices-how-and-why-to-build-small-container-images/</guid>
      <description>By Sandeep Dinesh, Developer Advocate
Editor’s note: Today marks the first installment in a seven-part video and blog series from Google Developer Advocate Sandeep Dinesh on how to get the most out of your Kubernetes environment. Today he tackles the theory and practicalities of keeping your container images as small as possible.
Docker makes building containers a breeze. Just put a standard Dockerfile into your folder, run the docker ‘build’ command, and shazam!</description>
    </item>
    
  </channel>
</rss>